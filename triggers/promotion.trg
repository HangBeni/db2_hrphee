CREATE OR REPLACE TRIGGER MEMBER_PROMOTION_LOG AFTER
    INSERT OR UPDATE OR DELETE ON RANK_PRIVILEGES
DECLARE
    V_OPERATION VARCHAR2(100);
BEGIN
    CASE
        WHEN INSERTING THEN
            V_OPERATION := 'INSERT_NEW_PROMOTION';
        WHEN UPDATING THEN
            V_OPERATION := 'UPDATE_CHANGED_PROMOTION';
        WHEN DELETING THEN
            V_OPERATION := 'DELETE_DEPROMOTION';
    END CASE;

    IF SUCCESS THEN
        V_OPERATION := V_OPERATION
                       || '_SUCCESSFUL';
    ELSE
        V_OPERATION := V_OPERATION
                       || '_FAILED';
    END IF;

    INSERT INTO RANK_PRIVILEGES_HIS (
        CHANGER,
        LOG_MSSG,
        TR_TIME
    ) VALUES (
        SYS_CONTEXT('USERENV', 'SESSION_USER'),
        'Member '
        || V_OPERATION
        || ': '
        || :NEW.MEMBER_ID,
        SYSTIMESTAMP
    );
    COMMIT;
END;
/

CREATE OR REPLACE TRIGGER RANK_INSERTION_LOG AFTER
    INSERT ON RANK_DICTIONARY
DECLARE
    V_OPERATION VARCHAR2(100);
BEGIN
    V_OPERATION := 'INSERT_NEW_RANK';
    INSERT INTO RANK_DICTIONARY_HIS (
        CHANGER,
        LOG_MSSG,
        TR_TIME
    ) VALUES (
        SYS_CONTEXT('USERENV', 'SESSION_USER'),
        'Rank '
        || V_OPERATION
        || ': '
        || :NEW.RANK_NAME,
        SYSTIMESTAMP
    );
    COMMIT;
END;
/